version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../backend:/app

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        VITE_PUBLIC_API_BASE_URL: ${VITE_PUBLIC_API_BASE_URL}
    ports:
      - "3000:3000"
    environment:
      VITE_PUBLIC_API_BASE_URL: ${VITE_PUBLIC_API_BASE_URL}
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/build

volumes:
  postgres_data:
