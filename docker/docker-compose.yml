# docker/docker-compose.yml

version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: issues_tracker_db
      POSTGRES_USER: adarsh
      POSTGRES_PASSWORD: AdarshKumar123
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adarsh -d issues_tracker_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://adarsh:AdarshKumar123@db:5432/issues_tracker_db
      SECRET_KEY: 500a7b877765dd305eb5e76ff7449c335cd814da5164cb058fbbb1a66e6cac9d
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../backend:/app

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        VITE_PUBLIC_API_BASE_URL: http://localhost:8000/api/v1
    ports:
      - "3000:3000"
    environment:
      # Corrected to match your frontend .env file
      VITE_PUBLIC_API_BASE_URL: http://localhost:8000/api/v1
    depends_on:
      - backend
    volumes:
      - ../frontend:/app
      - /app/node_modules
      - /app/build 

volumes:
  postgres_data: