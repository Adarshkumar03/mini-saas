"""Create issues table and enums for status and severity

Revision ID: 3d0d1afadec8
Revises: 4a409bb6d553
Create Date: 2025-07-04 08:01:04.283379

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '3d0d1afadec8'
down_revision: Union[str, Sequence[str], None] = '4a409bb6d553'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # IMPORTANT: Ensure ENUM types are created BEFORE the table that uses them.

    # Create IssueStatus ENUM type
    issue_status_enum = postgresql.ENUM('OPEN', 'TRIAGED', 'IN_PROGRESS', 'DONE', name='issuestatus', create_type=False)
    issue_status_enum.create(op.get_bind(), checkfirst=True)

    # Create IssueSeverity ENUM type
    issue_severity_enum = postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='issueseverity', create_type=False)
    issue_severity_enum.create(op.get_bind(), checkfirst=True)

    op.create_table('issues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('severity', issue_severity_enum, nullable=False), # Use the enum object
    sa.Column('status', issue_status_enum, nullable=False),     # Use the enum object
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('issues', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_issues_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_issues_title'), ['title'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('issues', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_issues_title'))
        batch_op.drop_index(batch_op.f('ix_issues_id'))

    op.drop_table('issues')

    # Drop ENUM types on downgrade
    postgresql.ENUM('OPEN', 'TRIAGED', 'IN_PROGRESS', 'DONE', name='issuestatus').drop(op.get_bind())
    postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='issueseverity').drop(op.get_bind())
    # ### end Alembic commands ###