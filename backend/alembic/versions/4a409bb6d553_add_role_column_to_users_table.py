"""Add role column to users table

Revision ID: 4a409bb6d553
Revises: 787ec575a50a
Create Date: 2025-07-04 00:05:49.105367

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '4a409bb6d553'
down_revision: Union[str, Sequence[str], None] = '787ec575a50a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. Create the ENUM type first
    user_role_enum = postgresql.ENUM('REPORTER', 'MAINTAINER', 'ADMIN', name='userrole', create_type=False)
    user_role_enum.create(op.get_bind(), checkfirst=True) # Create the type in the database

    # 2. Then add the column that uses the ENUM type
    op.add_column('users', sa.Column('role', user_role_enum, nullable=False, server_default='REPORTER'))
    # Set a default value for existing rows if any, or for new rows if the column is added to an existing table.
    # We use server_default here to ensure the database handles the default.

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'role')
    # Drop the ENUM type on downgrade
    postgresql.ENUM('REPORTER', 'MAINTAINER', 'ADMIN', name='userrole').drop(op.get_bind())
    # ### end Alembic commands ###
